#include "no_comm_reversi.h"

int main(){
  int judge;
  
  int eval_board1[] ={\
       0, 100, -80,  80,  20,  -5,  -5,  20,  10, -80, 100,   0,\
     100, -90, -60,  -5,  -5,  -5,  -5,  -5,  -5, -60, -90, 100,\
     -80, -60,  20,  -5,  -5, -10, -10,  -5,  -5,  20, -60, -80,\
      10,  -5,  -5,  -5,  -5, -10, -10,  -5,  -5,  -5,  -5,  10,\
      -5,  -5,  -5,  -5,  -5, -10, -10,  -5,  -5,  -5,  -5,  -5,\
      -5,  -5, -10, -10, -10, -10, -10, -10, -10, -10,  -5,  -5,\
      -5,  -5, -10, -10, -10, -10, -10, -10, -10, -10,  -5,  -5,\
      -5,  -5,  -5,  -5,  -5, -10, -10,  -5,  -5,  -5,  -5,  -5,\
      10,  -5,  -5,  -5,  -5, -10, -10,  -5,  -5,  -5,  -5,  10,\
     -80, -60,  20,  -5,  -5, -10, -10,  -5,  -5,  20, -60, -80,\
     100, -90, -60,  -5,  -5,  -5,  -5,  -5,  -5, -60, -90, 100,\
       0, 100, -80,  10,  -5,  -5,  -5,  -5,  10, -80, 100,   0};


int eval_board2[] ={\
       0, 100, -80, 10,  5,   5,   5,   5,  10, -80, 100,   0,\
     100, -90, -60,  5,  5,   5,   5,   5,   5, -60, -90, 100,\
     -80, -60,  20,  5,  5,  10,  10,   5,   5,  20, -60, -80,\
      10,   5,   5,  5,  5,  10,  10,   5,   5,   5,   5,  10,\
       5,   5,   5,  5,  5,  10,  10,   5,   5,   5,   5,   5,\
       5,   5,  10, 10, 10,  10,  10,  10,  10,  10,   5,   5,\
       5,   5,  10, 10, 10,  10,  10,  10,  10,  10,   5,   5,\
       5,   5,   5,  5,  5,  10,  10,   5,   5,   5,   5,   5,\
      10,   5,   5,  5,  5,  10,  10,   5,   5,   5,   5,  10,\
     -80, -60,  20,  5,  5,  10,  10,   5,   5,  20, -60, -80,\
     100, -90, -60,  5,  5,   5,   5,   5,   5, -60, -90, 100,\
       0, 100, -80, 10,  5,   5,   5,   5,  10, -80, 100,   0};

 int p1_win = 0;
 int p2_win = 0;
 int draw = 0;
 for(int i = 0; i < 50; i++){
   if((judge = abvsab(eval_board1, eval_board2)) > 0){
     p1_win++;
     std::cout << "p1win" << std::endl;
   }else if(judge < 0){
     p2_win++;
     std::cout << "p2win" << std::endl;

   }else{
     draw++;
     std::cout << "draw" << std::endl;

   }
 }
 for(int i = 0; i < 50; i++){
   if((judge = abvsab(eval_board2, eval_board1)) > 0){
     p2_win++;
     std::cout << "p2win" << std::endl;

   }else if(judge < 0){
     p1_win++;
     std::cout << "p1win" << std::endl;

   }else{
     draw++;
     std::cout << "draw" << std::endl;
   }
 }

  // if(judge == 1){
  //   std::cout << "PLAYER1(BLACK) WIN" << endl;
  // }else if(judge == -1){
  //   std::cout << "PLAYER2(WHITE) WIN" << endl;
  // }else{
  //   std::cout << "DRAW" << endl;
  // }
 std::cout << "PLAYER1: " << p1_win << " PLAYER2: " << p2_win << " DRAW: " << draw << std::endl;
  return 0;
}
